<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.schmizzolin.maven.poms</groupId>
        <artifactId>parent</artifactId>
        <version>1.6.0</version>
        <relativePath />
    </parent>
    <groupId>de.schmizzolin</groupId>
    <artifactId>yogi</artifactId>
    <version>1.5.0-SNAPSHOT</version>
    <name>Yogi</name>
    <description>Vocabulary Trainer</description>

    <properties>
        <maven.build.timestamp.format>yyyyMMdd-HHmmss</maven.build.timestamp.format>
        <springboot.version>2.7.4</springboot.version>
    </properties>

    <scm>
        <url>https://github.com/mlhartme/yogi</url>
        <connection>scm:git:ssh://git@github.com/mlhartme/yogi.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/mlhartme/yogi.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <dependencies>
        <dependency>
            <groupId>net.oneandone</groupId>
            <artifactId>sushi</artifactId>
            <version>3.3.0</version>
        </dependency>
        <dependency><!-- https://github.com/hub4j/github-api -->
            <groupId>org.kohsuke</groupId>
            <artifactId>github-api</artifactId>
            <version>1.313</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>5.2.2</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>popper.js</artifactId>
            <version>2.9.3</version>
        </dependency>

        <!-- spring boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${springboot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${springboot.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <version>${springboot.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- thymeleaf -->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring5</artifactId>
            <version>3.0.15.RELEASE</version>
        </dependency>
        <dependency><!-- to support "temporals" in templates -->
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-java8time</artifactId>
            <version>3.0.4.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
            <version>3.1.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
            <version>${springboot.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/filtered-resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${springboot.version}</version>
                <configuration>
                    <jvmArguments>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</jvmArguments>
                </configuration>
                <executions>
                    <execution>
                        <id>repackage</id>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <header>${basedir}/src/license-header.txt</header>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>regex-property</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>image.tag</name>
                            <value>${project.version}</value>
                            <regex>-SNAPSHOT</regex>
                            <replacement>-${maven.build.timestamp}</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/chart</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/chart</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.3.1</version>
                <configuration>
                    <to>
                        <image>ghcr.io/mlhartme/yogi</image>
                        <tags>
                            <tag>${image.tag}</tag>
                            <tag>latest</tag>
                        </tags>
                    </to>
                    <container>
                        <jvmFlags><!-- TODO: have a different application properties file instead-->
                            <jvmFlag>-Dyogi.user=/app/etc/userProperties</jvmFlag>
                            <jvmFlag>-Dyogi.lib=/app/yogilib</jvmFlag>
                        </jvmFlags>
                        <mainClass>de.schmizzolin.yogi.YogiApplication</mainClass>
                        <ports>
                            <port>8080</port>
                        </ports>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <id>deploy-images</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <from>
                                <platforms>
                                    <platform>
                                        <architecture>amd64</architecture>
                                        <os>linux</os>
                                    </platform>
                                    <platform>
                                        <architecture>arm64</architecture>
                                        <os>linux</os>
                                    </platform>
                                </platforms>
                            </from>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>generate-overrides</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>./src/generate-overrides.sh</executable>
                            <workingDirectory>${basedir}</workingDirectory>
                            <arguments>
                                <argument>${image.tag}</argument>
                                <argument>${project.build.directory}/values-override.yaml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                     <execution>
                         <id>merge-values</id>
                         <phase>package</phase>
                         <goals>
                             <goal>exec</goal>
                         </goals>
                         <configuration>
                             <executable>./src/merge-values.sh</executable>
                             <workingDirectory>${basedir}</workingDirectory>
                             <arguments>
                                 <argument>${project.build.directory}/chart/values.yaml</argument>
                                 <argument>${project.build.directory}/values-override.yaml</argument>
                             </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>package-chart</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>helm</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>package</argument>
                                <argument>chart</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>push-chart</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>helm</executable>
                            <workingDirectory>${project.build.directory}</workingDirectory>
                            <arguments>
                                <argument>push</argument>
                                <argument>${project.artifactId}-${image.tag}.tgz</argument>
                                <argument>oci://ghcr.io/mlhartme/charts</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>

    <profiles>
        <profile>
            <id>arch-amd</id>
            <activation>
                <property>
                    <name>os.arch</name>
                    <value>amd64</value>
                </property>
            </activation>
            <properties>
                <image.arch>amd64</image.arch>
            </properties>
        </profile>
        <profile>
            <id>arch-arm</id>
            <activation>
                <property>
                    <name>os.arch</name>
                    <value>aarch64</value>
                </property>
            </activation>
            <properties>
                <image.arch>arm64</image.arch>
            </properties>
        </profile>
        <profile>
            <id>docker</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>build-image</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>dockerBuild</goal>
                                </goals>
                                <configuration>
                                    <to>
                                        <image>local/yogi</image>
                                        <tags>
                                            <tag>latest</tag>
                                        </tags>
                                    </to>
                                    <from>
                                        <platforms>
                                            <platform>
                                                <architecture>${image.arch}</architecture>
                                                <os>linux</os>
                                            </platform>
                                        </platforms>
                                    </from>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
